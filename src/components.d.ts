/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';


import {
  ApolloClient,
} from 'apollo-client';
import {
  DocumentNode,
} from 'graphql';
import {
  OnMutationReadyFn,
} from './components/apollo-mutation/apollo-mutation';
import {
  OnQueryReadyFn,
} from './components/apollo-query/apollo-query';


declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface ApolloClientController {
      'create': (client: ApolloClient<any>) => void;
      'getClient': () => ApolloClient<any>;
    }

    interface ApolloMutation {
      'mutation': DocumentNode;
      'onReady': OnMutationReadyFn;
    }

    interface ApolloProvider {
      'client': ApolloClient<any>;
    }

    interface ApolloQuery {
      'onReady': OnQueryReadyFn<any>;
      'query': DocumentNode;
    }

    interface MyComponent {
      'first': string;
      'last': string;
    }
  }


    interface HTMLApolloClientControllerElement extends StencilComponents.ApolloClientController, HTMLStencilElement {}

    var HTMLApolloClientControllerElement: {
      prototype: HTMLApolloClientControllerElement;
      new (): HTMLApolloClientControllerElement;
    };
    

    interface HTMLApolloMutationElement extends StencilComponents.ApolloMutation, HTMLStencilElement {}

    var HTMLApolloMutationElement: {
      prototype: HTMLApolloMutationElement;
      new (): HTMLApolloMutationElement;
    };
    

    interface HTMLApolloProviderElement extends StencilComponents.ApolloProvider, HTMLStencilElement {}

    var HTMLApolloProviderElement: {
      prototype: HTMLApolloProviderElement;
      new (): HTMLApolloProviderElement;
    };
    

    interface HTMLApolloQueryElement extends StencilComponents.ApolloQuery, HTMLStencilElement {}

    var HTMLApolloQueryElement: {
      prototype: HTMLApolloQueryElement;
      new (): HTMLApolloQueryElement;
    };
    

    interface HTMLMyComponentElement extends StencilComponents.MyComponent, HTMLStencilElement {}

    var HTMLMyComponentElement: {
      prototype: HTMLMyComponentElement;
      new (): HTMLMyComponentElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'apollo-client-controller': JSXElements.ApolloClientControllerAttributes;
    'apollo-mutation': JSXElements.ApolloMutationAttributes;
    'apollo-provider': JSXElements.ApolloProviderAttributes;
    'apollo-query': JSXElements.ApolloQueryAttributes;
    'my-component': JSXElements.MyComponentAttributes;
    }
  }

  namespace JSXElements {

    export interface ApolloClientControllerAttributes extends HTMLAttributes {

    }

    export interface ApolloMutationAttributes extends HTMLAttributes {
      'mutation'?: DocumentNode;
      'onReady'?: OnMutationReadyFn;
    }

    export interface ApolloProviderAttributes extends HTMLAttributes {
      'client'?: ApolloClient<any>;
    }

    export interface ApolloQueryAttributes extends HTMLAttributes {
      'onReady'?: OnQueryReadyFn<any>;
      'query'?: DocumentNode;
    }

    export interface MyComponentAttributes extends HTMLAttributes {
      'first'?: string;
      'last'?: string;
    }
  }

  interface HTMLElementTagNameMap {
    'apollo-client-controller': HTMLApolloClientControllerElement
    'apollo-mutation': HTMLApolloMutationElement
    'apollo-provider': HTMLApolloProviderElement
    'apollo-query': HTMLApolloQueryElement
    'my-component': HTMLMyComponentElement
  }

  interface ElementTagNameMap {
    'apollo-client-controller': HTMLApolloClientControllerElement;
    'apollo-mutation': HTMLApolloMutationElement;
    'apollo-provider': HTMLApolloProviderElement;
    'apollo-query': HTMLApolloQueryElement;
    'my-component': HTMLMyComponentElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;